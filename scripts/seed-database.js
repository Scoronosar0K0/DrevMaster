const Database = require("better-sqlite3");
const bcrypt = require("bcryptjs");
const path = require("path");

const dbPath = path.join(process.cwd(), "drevmaster.db");
const db = new Database(dbPath);

// –í–∫–ª—é—á–∞–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É –≤–Ω–µ—à–Ω–∏—Ö –∫–ª—é—á–µ–π
db.pragma("foreign_keys = ON");

console.log("üöÄ –ó–∞–ø–æ–ª–Ω—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏...");

try {
  // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤
  const hashedPassword = bcrypt.hashSync("password123", 10);

  // –ü–∞—Ä—Ç–Ω–µ—Ä 1
  const user1 = db
    .prepare(
      `
    INSERT INTO users (username, password, role, name, email, phone)
    VALUES (?, ?, 'partner', ?, ?, ?)
  `
    )
    .run(
      "partner1",
      hashedPassword,
      "–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤",
      "ivan@example.com",
      "+7-900-123-45-67"
    );

  db.prepare(
    `
    INSERT INTO partners (user_id, balance, description)
    VALUES (?, ?, ?)
  `
  ).run(user1.lastInsertRowid, 50000, "–ò–Ω–≤–µ—Å—Ç–æ—Ä –∏–∑ –ú–æ—Å–∫–≤—ã");

  // –ü–∞—Ä—Ç–Ω–µ—Ä 2
  const user2 = db
    .prepare(
      `
    INSERT INTO users (username, password, role, name, email, phone)
    VALUES (?, ?, 'partner', ?, ?, ?)
  `
    )
    .run(
      "partner2",
      hashedPassword,
      "–ï–ª–µ–Ω–∞ –°–∏–¥–æ—Ä–æ–≤–∞",
      "elena@example.com",
      "+7-900-234-56-78"
    );

  db.prepare(
    `
    INSERT INTO partners (user_id, balance, description)
    VALUES (?, ?, ?)
  `
  ).run(user2.lastInsertRowid, 75000, "–ò–Ω–≤–µ—Å—Ç–æ—Ä –∏–∑ –°–ü–±");

  console.log("‚úÖ –ü–∞—Ä—Ç–Ω–µ—Ä—ã —Å–æ–∑–¥–∞–Ω—ã");

  // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤
  const supplier1 = db
    .prepare(
      `
    INSERT INTO suppliers (name, contact_person, phone, email, address, description)
    VALUES (?, ?, ?, ?, ?, ?)
  `
    )
    .run(
      '–û–û–û "–õ–µ—Å–æ–ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫"',
      "–ê–ª–µ–∫—Å–µ–π –°–º–∏—Ä–Ω–æ–≤",
      "+7-495-123-45-67",
      "info@lesoprom.ru",
      "–≥. –ê—Ä—Ö–∞–Ω–≥–µ–ª—å—Å–∫, —É–ª. –õ–µ—Å–Ω–∞—è, 15",
      "–ü–æ—Å—Ç–∞–≤—â–∏–∫ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –¥—Ä–µ–≤–µ—Å–∏–Ω—ã –∏–∑ —Å–µ–≤–µ—Ä–Ω—ã—Ö —Ä–µ–≥–∏–æ–Ω–æ–≤"
    );

  const supplier2 = db
    .prepare(
      `
    INSERT INTO suppliers (name, contact_person, phone, email, address, description)
    VALUES (?, ?, ?, ?, ?, ?)
  `
    )
    .run(
      '–ó–ê–û "–°–∏–±–∏—Ä—Å–∫–∏–π –ª–µ—Å"',
      "–ú–∏—Ö–∞–∏–ª –ö—É–∑–Ω–µ—Ü–æ–≤",
      "+7-383-234-56-78",
      "orders@sibirles.ru",
      "–≥. –ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫, –ø—Ä. –õ–µ—Å–Ω–æ–π, 42",
      "–≠–∫—Å–ø–æ—Ä—Ç –¥—Ä–µ–≤–µ—Å–∏–Ω—ã –≤—ã—Å—à–µ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞"
    );

  console.log("‚úÖ –ü–æ—Å—Ç–∞–≤—â–∏–∫–∏ —Å–æ–∑–¥–∞–Ω—ã");

  // –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä—ã –¥–ª—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤
  const items1 = [
    "–ë—Ä—É—Å 150x150x6000",
    "–î–æ—Å–∫–∞ –æ–±—Ä–µ–∑–Ω–∞—è 50x150x6000",
    "–í–∞–≥–æ–Ω–∫–∞ –ª–∏–ø–∞",
    "–ë–ª–æ–∫-—Ö–∞—É—Å —Å–æ—Å–Ω–∞",
    "–ü–æ–ª–æ–≤–∞—è –¥–æ—Å–∫–∞",
  ];

  const items2 = [
    "–ë—Ä—É—Å –∫–ª–µ–µ–Ω—ã–π 200x200x6000",
    "OSB-3 –ø–ª–∏—Ç–∞ 18–º–º",
    "–§–∞–Ω–µ—Ä–∞ –±–µ—Ä–µ–∑–æ–≤–∞—è 18–º–º",
    "–ë—Ä—É—Å–æ–∫ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–π 50x50x3000",
    "–†–µ–π–∫–∞ 20x40x3000",
  ];

  items1.forEach((item) => {
    db.prepare(
      `
      INSERT INTO supplier_items (supplier_id, name)
      VALUES (?, ?)
    `
    ).run(supplier1.lastInsertRowid, item);
  });

  items2.forEach((item) => {
    db.prepare(
      `
      INSERT INTO supplier_items (supplier_id, name)
      VALUES (?, ?)
    `
    ).run(supplier2.lastInsertRowid, item);
  });

  console.log("‚úÖ –¢–æ–≤–∞—Ä—ã –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ –¥–æ–±–∞–≤–ª–µ–Ω—ã");

  // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∑–∞–∫–∞–∑—ã
  const date = new Date().toISOString().split("T")[0];

  const order1 = db
    .prepare(
      `
    INSERT INTO orders (
      order_number, supplier_id, item_id, date, description, 
      measurement, value, price_per_unit, total_price, status
    )
    VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
  `
    )
    .run(
      "ORD-241225-001",
      supplier1.lastInsertRowid,
      1, // –ë—Ä—É—Å 150x150x6000
      date,
      "–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã",
      "–∫—É–±.–º",
      25.5,
      450,
      11475,
      "warehouse"
    );

  const order2 = db
    .prepare(
      `
    INSERT INTO orders (
      order_number, supplier_id, item_id, date, description, 
      measurement, value, price_per_unit, total_price, status
    )
    VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
  `
    )
    .run(
      "ORD-241225-002",
      supplier2.lastInsertRowid,
      6, // –ë—Ä—É—Å –∫–ª–µ–µ–Ω—ã–π 200x200x6000
      date,
      "–ó–∞–∫–∞–∑ –∫–ª–µ–µ–Ω–æ–≥–æ –±—Ä—É—Å–∞ –¥–ª—è —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞",
      "–∫—É–±.–º",
      15.0,
      850,
      12750,
      "on_way"
    );

  console.log("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –∑–∞–∫–∞–∑—ã —Å–æ–∑–¥–∞–Ω—ã");

  // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∑–∞–π–º—ã
  db.prepare(
    `
    INSERT INTO loans (partner_id, order_id, amount, is_paid)
    VALUES (?, ?, ?, ?)
  `
  ).run(1, order1.lastInsertRowid, 8000, false);

  db.prepare(
    `
    INSERT INTO loans (partner_id, order_id, amount, is_paid)
    VALUES (?, ?, ?, ?)
  `
  ).run(2, order2.lastInsertRowid, 10000, false);

  console.log("‚úÖ –ó–∞–π–º—ã —Å–æ–∑–¥–∞–Ω—ã");

  // –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å—ã –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤
  db.prepare(`UPDATE partners SET balance = balance - 8000 WHERE id = 1`).run();
  db.prepare(
    `UPDATE partners SET balance = balance - 10000 WHERE id = 2`
  ).run();

  console.log("‚úÖ –ë–∞–ª–∞–Ω—Å—ã –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤ –æ–±–Ω–æ–≤–ª–µ–Ω—ã");

  // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å–∏ –≤ –ª–æ–≥ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
  const logs = [
    [1, "—Å–æ–∑–¥–∞–Ω", "partner", 1, "–°–æ–∑–¥–∞–Ω –ø–∞—Ä—Ç–Ω–µ—Ä: –ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤"],
    [1, "—Å–æ–∑–¥–∞–Ω", "partner", 2, "–°–æ–∑–¥–∞–Ω –ø–∞—Ä—Ç–Ω–µ—Ä: –ï–ª–µ–Ω–∞ –°–∏–¥–æ—Ä–æ–≤–∞"],
    [
      1,
      "—Å–æ–∑–¥–∞–Ω",
      "supplier",
      supplier1.lastInsertRowid,
      '–°–æ–∑–¥–∞–Ω –ø–æ—Å—Ç–∞–≤—â–∏–∫: –û–û–û "–õ–µ—Å–æ–ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫"',
    ],
    [
      1,
      "—Å–æ–∑–¥–∞–Ω",
      "supplier",
      supplier2.lastInsertRowid,
      '–°–æ–∑–¥–∞–Ω –ø–æ—Å—Ç–∞–≤—â–∏–∫: –ó–ê–û "–°–∏–±–∏—Ä—Å–∫–∏–π –ª–µ—Å"',
    ],
    [
      1,
      "–∑–∞–∫–∞–∑_—Å–æ–∑–¥–∞–Ω",
      "order",
      order1.lastInsertRowid,
      "–°–æ–∑–¥–∞–Ω –∑–∞–∫–∞–∑ ORD-241225-001",
    ],
    [
      1,
      "–∑–∞–∫–∞–∑_—Å–æ–∑–¥–∞–Ω",
      "order",
      order2.lastInsertRowid,
      "–°–æ–∑–¥–∞–Ω –∑–∞–∫–∞–∑ ORD-241225-002",
    ],
    [1, "–∑–∞–π–º_–≤–∑—è—Ç", "loan", 1, "–ó–∞–π–º –Ω–∞ —Å—É–º–º—É $8000 –æ—Ç –ø–∞—Ä—Ç–Ω–µ—Ä–∞ –ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤"],
    [
      1,
      "–∑–∞–π–º_–≤–∑—è—Ç",
      "loan",
      2,
      "–ó–∞–π–º –Ω–∞ —Å—É–º–º—É $10000 –æ—Ç –ø–∞—Ä—Ç–Ω–µ—Ä–∞ –ï–ª–µ–Ω–∞ –°–∏–¥–æ—Ä–æ–≤–∞",
    ],
  ];

  logs.forEach(([user_id, action, entity_type, entity_id, details]) => {
    db.prepare(
      `
      INSERT INTO activity_logs (user_id, action, entity_type, entity_id, details)
      VALUES (?, ?, ?, ?, ?)
    `
    ).run(user_id, action, entity_type, entity_id, details);
  });

  console.log("‚úÖ –ò—Å—Ç–æ—Ä–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∞");

  console.log("\nüéâ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏!");
  console.log("\nüìã –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞:");
  console.log("üë§ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: admin / admin");
  console.log("üë§ –ü–∞—Ä—Ç–Ω–µ—Ä 1: partner1 / password123");
  console.log("üë§ –ü–∞—Ä—Ç–Ω–µ—Ä 2: partner2 / password123");
  console.log("\nüåê –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:3000 –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Å–∏—Å—Ç–µ–º–æ–π");
} catch (error) {
  console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:", error);
} finally {
  db.close();
}
