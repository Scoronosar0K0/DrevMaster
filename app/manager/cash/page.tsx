"use client";

import { useState, useEffect } from "react";
import { useRouter } from "next/navigation";

interface Loan {
  id: number;
  amount: number;
  is_paid: boolean;
  created_at: string;
  order_id?: number;
  order_number?: string;
}

interface FinancialSummary {
  totalLoans: number;
  totalPaid: number;
  currentDebt: number;
}

export default function ManagerCashPage() {
  const [loans, setLoans] = useState<Loan[]>([]);
  const [summary, setSummary] = useState<FinancialSummary>({
    totalLoans: 0,
    totalPaid: 0,
    currentDebt: 0,
  });
  const [loading, setLoading] = useState(true);
  const router = useRouter();

  useEffect(() => {
    fetchFinancialData();
  }, []);

  const fetchFinancialData = async () => {
    try {
      const response = await fetch("/api/manager/cash");
      if (response.ok) {
        const data = await response.json();
        setLoans(data.loans);
        setSummary(data.summary);
      } else {
        console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö");
      }
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö:", error);
    } finally {
      setLoading(false);
    }
  };

  const formatDate = (dateString: string) => {
    return new Date(dateString).toLocaleDateString("ru-RU");
  };

  if (loading) {
    return (
      <div className="min-h-screen bg-gray-100 flex items-center justify-center">
        <div className="text-lg">–ó–∞–≥—Ä—É–∑–∫–∞...</div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gray-100">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="bg-white shadow">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between items-center py-6">
            <div>
              <button
                onClick={() => router.push("/manager")}
                className="text-blue-600 hover:text-blue-800 mb-2"
              >
                ‚Üê –ù–∞–∑–∞–¥ –∫ –ø–∞–Ω–µ–ª–∏
              </button>
              <h1 className="text-3xl font-bold text-gray-900">–ú–æ–∏ —Ñ–∏–Ω–∞–Ω—Å—ã</h1>
              <p className="text-gray-600">
                –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–π–º–∞—Ö –∏ –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç–∏
              </p>
            </div>
          </div>
        </div>
      </div>

      {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        {/* –°–≤–æ–¥–∫–∞ */}
        <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
          <div className="bg-white overflow-hidden shadow rounded-lg">
            <div className="p-5">
              <div className="flex items-center">
                <div className="flex-shrink-0">
                  <div className="w-8 h-8 bg-blue-600 rounded-md flex items-center justify-center">
                    <span className="text-white font-bold">üí∞</span>
                  </div>
                </div>
                <div className="ml-5 w-0 flex-1">
                  <dl>
                    <dt className="text-sm font-medium text-gray-500 truncate">
                      –û–±—â–∞—è —Å—É–º–º–∞ –∑–∞–π–º–æ–≤
                    </dt>
                    <dd className="text-lg font-medium text-gray-900">
                      ${summary.totalLoans.toFixed(2)}
                    </dd>
                  </dl>
                </div>
              </div>
            </div>
          </div>

          <div className="bg-white overflow-hidden shadow rounded-lg">
            <div className="p-5">
              <div className="flex items-center">
                <div className="flex-shrink-0">
                  <div className="w-8 h-8 bg-green-600 rounded-md flex items-center justify-center">
                    <span className="text-white font-bold">‚úì</span>
                  </div>
                </div>
                <div className="ml-5 w-0 flex-1">
                  <dl>
                    <dt className="text-sm font-medium text-gray-500 truncate">
                      –í—ã–ø–ª–∞—á–µ–Ω–æ
                    </dt>
                    <dd className="text-lg font-medium text-gray-900">
                      ${summary.totalPaid.toFixed(2)}
                    </dd>
                  </dl>
                </div>
              </div>
            </div>
          </div>

          <div className="bg-white overflow-hidden shadow rounded-lg">
            <div className="p-5">
              <div className="flex items-center">
                <div className="flex-shrink-0">
                  <div className="w-8 h-8 bg-red-600 rounded-md flex items-center justify-center">
                    <span className="text-white font-bold">!</span>
                  </div>
                </div>
                <div className="ml-5 w-0 flex-1">
                  <dl>
                    <dt className="text-sm font-medium text-gray-500 truncate">
                      –¢–µ–∫—É—â–∞—è –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç—å
                    </dt>
                    <dd className="text-lg font-medium text-gray-900">
                      ${summary.currentDebt.toFixed(2)}
                    </dd>
                  </dl>
                </div>
              </div>
            </div>
          </div>
        </div>

        {/* –ö–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–∞ –¥–µ–Ω–µ–≥ */}
        <div className="mb-6">
          <button
            onClick={() => router.push("/manager/transfers")}
            className="bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 transition duration-200"
          >
            –û—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–µ–Ω—å–≥–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
          </button>
        </div>

        {/* –ò—Å—Ç–æ—Ä–∏—è –∑–∞–π–º–æ–≤ */}
        <div className="bg-white shadow overflow-hidden sm:rounded-md">
          <div className="px-4 py-5 sm:px-6">
            <h3 className="text-lg leading-6 font-medium text-gray-900">
              –ò—Å—Ç–æ—Ä–∏—è –∑–∞–π–º–æ–≤
            </h3>
            <p className="mt-1 max-w-2xl text-sm text-gray-500">
              –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –≤–∞—à–∏—Ö –∑–∞–π–º–æ–≤ –∏ –∏—Ö —Å—Ç–∞—Ç—É—Å
            </p>
          </div>
          <div className="bg-white">
            {loans.length === 0 ? (
              <div className="px-4 py-5 sm:px-6 text-center text-gray-500">
                –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–π–º–æ–≤
              </div>
            ) : (
              <div className="overflow-hidden">
                <table className="min-w-full divide-y divide-gray-200">
                  <thead className="bg-gray-50">
                    <tr>
                      <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                        –î–∞—Ç–∞
                      </th>
                      <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                        –°—É–º–º–∞
                      </th>
                      <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                        –ó–∞–∫–∞–∑
                      </th>
                      <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                        –°—Ç–∞—Ç—É—Å
                      </th>
                    </tr>
                  </thead>
                  <tbody className="bg-white divide-y divide-gray-200">
                    {loans.map((loan) => (
                      <tr key={loan.id}>
                        <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                          {formatDate(loan.created_at)}
                        </td>
                        <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                          ${loan.amount.toFixed(2)}
                        </td>
                        <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                          {loan.order_number || "‚Äî"}
                        </td>
                        <td className="px-6 py-4 whitespace-nowrap">
                          <span
                            className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${
                              loan.is_paid
                                ? "bg-green-100 text-green-800"
                                : "bg-red-100 text-red-800"
                            }`}
                          >
                            {loan.is_paid ? "–í—ã–ø–ª–∞—á–µ–Ω" : "–ê–∫—Ç–∏–≤–µ–Ω"}
                          </span>
                        </td>
                      </tr>
                    ))}
                  </tbody>
                </table>
              </div>
            )}
          </div>
        </div>
      </div>
    </div>
  );
}
